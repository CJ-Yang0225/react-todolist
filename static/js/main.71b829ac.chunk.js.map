{"version":3,"sources":["components/TaskNavbar.js","components/TaskCreateForm.js","components/useForm.js","components/TaskCard.js","components/App.js","index.js"],"names":["defaultTabClassList","activatedTabClassList","filterTypes","labelByFilterType","All","Processing","Completed","TaskNavbar","activatedFilterType","value","emitChange","onChange","tabs","map","filterType","index","isActive","label","className","concat","withActivatedTabClassList","join","href","onClick","event","preventDefault","initialTask","title","date","time","message","isDone","isFavorite","TaskCreateForm","emitCreate","onCreate","useState","isExpanded","setIsExpanded","initialValues","values","setValues","target","name","useForm","task","handleTask","resetTask","toggleDetail","htmlFor","icon","type","id","placeholder","autoComplete","style","display","height","isValidTask","alert","TaskCard","emitRemove","onRemove","isEditing","setIsEditing","taskForEdit","setTaskForEdit","useEffect","isEditingClassList","isFavoriteClassList","checked","disabled","demoTasks","loadTasks","JSON","parse","localStorage","getItem","TaskFilter","App","tasks","setTasks","taskFilterType","setTaskFilterType","setItem","stringify","saveTasks","setTask","Object","assign","filter","sort","taskA","indexForRemove","_","library","add","fas","far","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71b829ac.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst defaultTabClassList = [\"navbar__link\"];\r\nconst activatedTabClassList = [\"navbar__link--active\"];\r\nconst filterTypes = [\"All\", \"Processing\", \"Completed\"];\r\n\r\nconst labelByFilterType = {\r\n  All: \"All Tasks\",\r\n  Processing: \"Processing\",\r\n  Completed: \"Completed\",\r\n};\r\n\r\nconst withActivatedTabClassList = (isActive) =>\r\n  isActive ? activatedTabClassList : [];\r\n\r\nconst TaskNavbar = ({\r\n  value: activatedFilterType,\r\n  onChange: emitChange,\r\n}) => {\r\n  const renderTab = (filterType, index) => {\r\n    const isActive = filterType === activatedFilterType;\r\n\r\n    const label = labelByFilterType[filterType];\r\n\r\n    const className = defaultTabClassList\r\n      .concat(withActivatedTabClassList(isActive))\r\n      .join(\" \");\r\n\r\n    const handleClick = (event) => {\r\n      event.preventDefault();\r\n      emitChange(filterType);\r\n    };\r\n\r\n    return (\r\n      <a key={index} href=\"/#\" className={className} onClick={handleClick}>\r\n        {label}\r\n      </a>\r\n    );\r\n  };\r\n\r\n  const tabs = filterTypes.map(renderTab);\r\n\r\n  return (\r\n    <nav className=\"task__navbar\">\r\n      <div className=\"navbar__tabs\">{tabs}</div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default TaskNavbar;\r\n","import React, { useState } from \"react\";\r\nimport { useForm } from \"./useForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst isValidTask = ({ title, date, time }) => title && date && time;\r\n\r\nconst initialTask = {\r\n  title: \"\",\r\n  date: \"\",\r\n  time: \"\",\r\n  message: \"\",\r\n  isDone: false,\r\n  isFavorite: false,\r\n};\r\n\r\nconst TaskCreateForm = ({ onCreate: emitCreate }) => {\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n  const [task, handleTask] = useForm(initialTask);\r\n\r\n  const resetTask = () => handleTask(initialTask);\r\n\r\n  const toggleDetail = () => setIsExpanded((isExpanded) => !isExpanded);\r\n\r\n  const handleCreate = () => {\r\n    if (!isValidTask(task)) {\r\n      alert(\"Please enter Task and Deadline\");\r\n      return;\r\n    }\r\n\r\n    emitCreate(task);\r\n    resetTask();\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    resetTask();\r\n    setIsExpanded(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"task__adder\">\r\n      <label htmlFor=\"adder__input\" className=\"adder__label border-0\">\r\n        <FontAwesomeIcon icon=\"plus\" />\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"adder__input\"\r\n        name=\"title\"\r\n        className=\"adder__input\"\r\n        placeholder=\"Add Task\"\r\n        autoComplete=\"off\"\r\n        value={task.title}\r\n        onClick={toggleDetail}\r\n        onChange={handleTask}\r\n      />\r\n      <button className=\"adder__option border-0\" onClick={toggleDetail}>\r\n        <FontAwesomeIcon icon=\"ellipsis-v\" />\r\n      </button>\r\n      <div\r\n        className={`task__detail${isExpanded ? \" task__detail--expanded\" : \"\"}`}\r\n      >\r\n        <div className=\"detail__body\">\r\n          <label className=\"detail__body__label\">\r\n            <FontAwesomeIcon icon={[\"far\", \"calendar-alt\"]} />\r\n            Deadline\r\n          </label>\r\n          <div className=\"detail__body__deadline\">\r\n            <input\r\n              type=\"date\"\r\n              name=\"date\"\r\n              className=\"date__input\"\r\n              value={task.date}\r\n              onChange={handleTask}\r\n            />\r\n            <input\r\n              type=\"time\"\r\n              name=\"time\"\r\n              className=\"time__input\"\r\n              value={task.time}\r\n              onChange={handleTask}\r\n            />\r\n          </div>\r\n          <label className=\"detail__body__label\">\r\n            <FontAwesomeIcon icon={[\"far\", \"file\"]} />\r\n            File\r\n          </label>\r\n          <label\r\n            className=\"detail__body__file\"\r\n            style={{ display: \"inline-block\", height: 32 }}\r\n          >\r\n            <FontAwesomeIcon icon={[\"fas\", \"plus\"]} />\r\n            <input type=\"file\" name=\"file\" className=\"file__input\" />\r\n          </label>\r\n          <label className=\"detail__body__label\">\r\n            <FontAwesomeIcon icon={[\"far\", \"comment-dots\"]} />\r\n            Message\r\n          </label>\r\n          <textarea\r\n            name=\"message\"\r\n            className=\"detail__body__description\"\r\n            placeholder=\"Type your task message here...\"\r\n            value={task.message}\r\n            onChange={({ target: { value: message } }) =>\r\n              handleTask((task) => ({ ...task, message }))\r\n            }\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"detail__footer\">\r\n          <button className=\"cancel--danger\" onClick={handleCancel}>\r\n            <FontAwesomeIcon icon={[\"fas\", \"times\"]} />\r\n            Cancel\r\n          </button>\r\n          <button className=\"save--primary\" onClick={handleCreate}>\r\n            <FontAwesomeIcon icon={[\"fas\", \"plus\"]} />\r\n            Save\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskCreateForm;\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialValues) => {\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  return [\r\n    values,\r\n    (event) =>\r\n      setValues({\r\n        ...values,\r\n        [event.target.name]: event.target.value\r\n      })\r\n  ];\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst TaskCard = ({\r\n  value: task,\r\n  onChange: emitChange,\r\n  onRemove: emitRemove\r\n}) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [taskForEdit, setTaskForEdit] = useState(task);\r\n\r\n  useEffect(() => setTaskForEdit(task), [task]);\r\n\r\n  const handleChange = () => {\r\n    emitChange(taskForEdit);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setTaskForEdit(task);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const isEditingClassList = isEditing ? \" task__card--editing\" : \"\";\r\n\r\n  const isFavoriteClassList = taskForEdit.isFavorite ? \" task__card--star\" : \"\";\r\n\r\n  return (\r\n    <div className=\"task__cardList\">\r\n      <li className={`task__card${isEditingClassList + isFavoriteClassList}`}>\r\n        <input\r\n          type=\"checkbox\"\r\n          title=\"isDone\"\r\n          checked={taskForEdit.isDone}\r\n          onChange={({ target: { checked: isDone } }) =>\r\n            emitChange({ ...task, isDone })\r\n          }\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          title={taskForEdit.title}\r\n          value={taskForEdit.title}\r\n          name=\"title\"\r\n          className=\"card__edit__input\"\r\n          onChange={({ target: { value: title } }) =>\r\n            setTaskForEdit((task) => ({ ...task, title }))\r\n          }\r\n          disabled={!isEditing}\r\n        />\r\n        <p title={taskForEdit.message}>{taskForEdit.message}</p>\r\n        <div className=\"card__end\">\r\n          <span className=\"widgetGroup\">\r\n            <button\r\n              title=\"Star Favorite\"\r\n              onClick={() =>\r\n                emitChange({ ...task, isFavorite: !taskForEdit.isFavorite })\r\n              }\r\n            >\r\n              <FontAwesomeIcon\r\n                icon={[taskForEdit.isFavorite ? \"fas\" : \"far\", \"star\"]}\r\n              />\r\n            </button>\r\n            <button title=\"Edit\" onClick={() => setIsEditing(() => !isEditing)}>\r\n              <FontAwesomeIcon icon={[\"far\", \"edit\"]} />\r\n            </button>\r\n            <button title=\"Delete\" onClick={emitRemove}>\r\n              <FontAwesomeIcon icon={[\"far\", \"trash-alt\"]} />\r\n            </button>\r\n          </span>\r\n          <span className=\"deadlineInfo\">\r\n            {taskForEdit.date} {taskForEdit.time}\r\n          </span>\r\n        </div>\r\n      </li>\r\n      <div\r\n        className={`task__detail${isEditing ? \" task__detail--expanded\" : \"\"}`}\r\n      >\r\n        <div className=\"detail__body\">\r\n          <label className=\"detail__body__label\">\r\n            <FontAwesomeIcon icon={[\"far\", \"calendar-alt\"]} />\r\n            Deadline\r\n          </label>\r\n          <div className=\"detail__body__deadline\">\r\n            <input\r\n              type=\"date\"\r\n              name=\"date\"\r\n              className=\"date__input\"\r\n              value={taskForEdit.date}\r\n              onChange={({ target: { value: date } }) =>\r\n                setTaskForEdit((task) => ({ ...task, date }))\r\n              }\r\n            />\r\n            <input\r\n              type=\"time\"\r\n              name=\"time\"\r\n              className=\"time__input\"\r\n              value={taskForEdit.time}\r\n              onChange={({ target: { value: time } }) =>\r\n                setTaskForEdit((task) => ({ ...task, time }))\r\n              }\r\n            />\r\n          </div>\r\n          <label className=\"detail__body__label\">\r\n            <FontAwesomeIcon icon={[\"far\", \"file\"]} />\r\n            File\r\n          </label>\r\n          <label\r\n            className=\"detail__body__file\"\r\n            style={{ display: \"inline-block\", height: 32 }}\r\n          >\r\n            <FontAwesomeIcon icon={[\"fas\", \"plus\"]} />\r\n            <input type=\"file\" name=\"file\" className=\"file__input\" />\r\n          </label>\r\n          <label className=\"detail__body__label\">\r\n            <FontAwesomeIcon icon={[\"far\", \"comment-dots\"]} />\r\n            Message\r\n          </label>\r\n          <textarea\r\n            name=\"message\"\r\n            className=\"detail__body__description\"\r\n            placeholder=\"Type your task here...\"\r\n            value={taskForEdit.message}\r\n            onChange={({ target: { value: message } }) =>\r\n              setTaskForEdit((task) => ({ ...task, message }))\r\n            }\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"detail__footer\">\r\n          <button className=\"cancel--danger\" onClick={handleCancel}>\r\n            <FontAwesomeIcon icon={[\"fas\", \"times\"]} />\r\n            Cancel\r\n          </button>\r\n          <button className=\"save--primary\" onClick={handleChange}>\r\n            <FontAwesomeIcon icon={[\"fas\", \"check\"]} />\r\n            Update\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TaskNavbar from \"./TaskNavbar\";\r\nimport TaskCreateForm from \"./TaskCreateForm\";\r\nimport TaskCard from \"./TaskCard\";\r\n\r\nconst demoTasks = [\r\n  {\r\n    title: \"期末考\",\r\n    date: \"2021-01-13\",\r\n    time: \"08:10\",\r\n    message: \"資料庫系統、工程數學\",\r\n    isDone: true,\r\n    isFavorite: false,\r\n  },\r\n  {\r\n    title: \"Learning\",\r\n    date: \"2021-12-31\",\r\n    time: \"11:59\",\r\n    message: \"React, Next.js, GraphQL\",\r\n    isDone: false,\r\n    isFavorite: true,\r\n  },\r\n];\r\n\r\nconst loadTasks = () => JSON.parse(localStorage.getItem(\"taskList\")) || demoTasks;\r\n\r\nconst saveTasks = (tasks) =>\r\n  localStorage.setItem(\"taskList\", JSON.stringify(tasks));\r\n\r\nconst TaskFilter = {\r\n  All: () => true,\r\n  Processing: (task) => !task.isDone,\r\n  Completed: (task) => task.isDone,\r\n};\r\n\r\nconst App = () => {\r\n  const [tasks, setTasks] = useState(loadTasks);\r\n  const [taskFilterType, setTaskFilterType] = useState(\"All\");\r\n\r\n  useEffect(() => saveTasks(tasks), [tasks]);\r\n\r\n  const setTask = (index) => (task) =>\r\n    setTasks(([...tasks]) => Object.assign(tasks, { [index]: task }));\r\n\r\n  const addTask = (task) => setTasks((tasks) => [...tasks, task]);\r\n\r\n  const removeTask = (indexForRemove) => () =>\r\n    setTasks((tasks) => tasks.filter((_, index) => index !== indexForRemove));\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <TaskNavbar value={taskFilterType} onChange={setTaskFilterType} />\r\n      </header>\r\n      <main className=\"container main\">\r\n        <TaskCreateForm onCreate={addTask} />\r\n\r\n        {tasks\r\n          .map((task, index) => [task, index])\r\n          .filter(([task]) => TaskFilter[taskFilterType](task))\r\n          .sort(([taskA], [taskB]) => taskB.isFavorite - taskA.isFavorite)\r\n          .map(([task, index]) => (\r\n            <TaskCard\r\n              key={index}\r\n              value={task}\r\n              onChange={setTask(index)}\r\n              onRemove={removeTask(index)}\r\n            />\r\n          ))}\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { far } from \"@fortawesome/free-regular-svg-icons\";\r\nimport \"./styles/index.min.css\";\r\nimport App from './components/App';\r\n\r\nlibrary.add(fas, far);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}